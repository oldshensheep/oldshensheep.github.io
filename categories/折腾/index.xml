<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>折腾 on oldshensheep</title>
    <link>https://blog.oldshensheep.com/categories/%E6%8A%98%E8%85%BE/</link>
    <description>Recent content in 折腾 on oldshensheep</description>
    <image>
      <url>https://blog.oldshensheep.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.oldshensheep.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Jan 2021 17:23:33 +0000</lastBuildDate><atom:link href="https://blog.oldshensheep.com/categories/%E6%8A%98%E8%85%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mount cifs in android</title>
      <link>https://blog.oldshensheep.com/note/mount-cifs-in-android/</link>
      <pubDate>Thu, 28 Jan 2021 17:23:33 +0000</pubDate>
      
      <guid>https://blog.oldshensheep.com/note/mount-cifs-in-android/</guid>
      <description>虽然 Google 在新版本的 android 中提供了新的访问文件的方式，一些文件管理器（如 MiXplorer ）可以访问 smb，其他应用程序访问这个文件管理器就可以间接的访问 smb 了。
但是并不是所有的应用程序都支持，所以直接挂载 smb 是一个比较好的解决办法（必须要 Root）。
前提条件 Android 系统获取 Root 权限 安装了 BusyBox, 注意必须是 BusyBox ，而不是系统自带的 ToyBox，在测试中 toybox 不支持挂载网络文件系统。我是通过 DevCheck 这个软件查看的。 折腾的结果 需要快速解决问题的只看这个就行了
执行下面的程序就可以挂载 smb 了，根据自己实际情况修改 host,user,pass,还有脚本末尾的挂载位置
host=&amp;#34;192.168.1.5&amp;#34; user=&amp;#34;sheep&amp;#34; pass=&amp;#34;123456789&amp;#34; gid=9997 uid=9997 file_mode=0770 dir_mode=0770 # 挂载前要新建好挂载的位置的文件夹 # //$host/main 是smb的文件夹 /.../emulated/0/{cifs/main} 是手机存储文件夹 su -mm -c mount -o user=$user,pass=$pass,rw,gid=$gid,uid=$uid,file_mode=$file_mode,dir_mode=$dir_mode -t cifs //$host/main /mnt/runtime/full/emulated/0/cifs/main 折腾的大致过程 首先打开终端，这里用的是 termux，理论上其他终端也可以。
然后输入下面的命令
su # 获取root权限 mkdir /mnt/sdcard/cifs # 挂载点 mount -o user=******,pass=&amp;#34;*****&amp;#34; -t cifs //192.</description>
    </item>
    
    <item>
      <title>如何在Linux上创建一个ISCSI服务器</title>
      <link>https://blog.oldshensheep.com/note/create-linux-iscsi-server/</link>
      <pubDate>Tue, 25 Feb 2020 09:55:01 +0000</pubDate>
      
      <guid>https://blog.oldshensheep.com/note/create-linux-iscsi-server/</guid>
      <description>如何在 Linux 上创建一个 ISCSI 服务器？如何用不同的存储介质作为后端存储？
因为一次黑群晖系统挂了，所以就学习了这个技能来解决这个问题。后来也就抛弃黑群晖了，黑群晖是真的香，但是有时候不怎么稳定，而且不像 Ubuntu 那样可以自由的安装各种软件。
安装方法&amp;amp;系统环境 Debian 及其衍生出来的系统，如 Ubuntu，Deepin 等，我是用 Ubuntu 18.04 LTS。
安装 targetcli-fb sudo apt update sudo apt install targetcli-fb 标题 命令有两种模式，一种是交互式模式，一种是命令行模式。这里用的是交互模式。
输入 targetcli 就可以进入命令行模式了。
进入交互式模式可以使用 ls,pwd,cd 等命令。
按 2 次 TAB 键可以查看所有可用的命令，在每个目录下都可以通过这种方式查看可用的命令
block 块设备 fileio 文件 pscsi 物理 SCSI ramdisk 内存 创建后端存储的文件 这里我们用一个文件做后端存储就行了，因为在写 blog 之前数据已经提取出来了这里演示就创建一个空白文件。
创建一个 1G 的文件
dd if=/dev/zero of=test bs=1M count=1000 创建后端存储 进入 targetcli 控制台输入
cd backstores/fileio # 这里按TAB会有提示不必一个个字母输入 create lun0 /root/test # 创建一个名为 lun0 的后端存储 回到根目录输入</description>
    </item>
    
  </channel>
</rss>
