<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on oldshensheep</title>
    <link>https://blog.oldshensheep.com/tags/linux/</link>
    <description>Recent content in Linux on oldshensheep</description>
    <image>
      <url>https://blog.oldshensheep.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.oldshensheep.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Jul 2022 18:30:00 +0000</lastBuildDate><atom:link href="https://blog.oldshensheep.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ZFS on Windows (using WSL2)</title>
      <link>https://blog.oldshensheep.com/note/zfs-on-windows/</link>
      <pubDate>Wed, 27 Jul 2022 18:30:00 +0000</pubDate>
      
      <guid>https://blog.oldshensheep.com/note/zfs-on-windows/</guid>
      <description>这个让 ZFS 工作在 Windows 上的项目还不太稳定，经常蓝屏，便寻求其他解决方案，于是乎。
有人可能会说你在不是脱裤子放屁吗，这不就是装个虚拟机运行 Linux？？？
是的，我就是脱裤子放屁。
写这个文章的时候使用的是 ArchLinux 的 WSL2，为了使教程更简单，也为了从 0 实现，这篇文章使用 Ubuntu22.04 版本进行测试。
先决条件 安装 WSL2 版本的 Ubuntu22.04，其他的系统版本应当也可。
具体安装方法参考官方文档。
对于系统版本大于 Windows 10 version 2004 或者 Windows11 的用户参考下面的文档：
https://docs.microsoft.com/en-us/windows/wsl/install
对于系统版本大于 Version 1903 的参考下面的文档：
https://docs.microsoft.com/en-us/windows/wsl/install-manual
替换 WSL 的 Linux Kernel 参考文档1
在此 https://github.com/oldshensheep/zfs-on-wsl/releases 下载编译好的支持 ZFS 的 Kernel，需要下载 bzImage，放到 Windows 的一个地方。
然后在 PowerShell 窗口中执行以下命令：
注意把&amp;lt;bzImage Path&amp;gt;替换成你下载的 bzImage 的路径，例如C:\\Fun\\bzImage
&amp;#34; [wsl2] kernel=&amp;lt;bzImage Path&amp;gt; &amp;#34; &amp;gt; ~/.wslconfig 然后wsl --shutdown关闭运行中的实例，然后重新启动 Ubuntu。
挂载硬盘到 WSL2 参考文档2</description>
    </item>
    
    <item>
      <title>如何在Linux上创建一个ISCSI服务器</title>
      <link>https://blog.oldshensheep.com/note/create-linux-iscsi-server/</link>
      <pubDate>Tue, 25 Feb 2020 09:55:01 +0000</pubDate>
      
      <guid>https://blog.oldshensheep.com/note/create-linux-iscsi-server/</guid>
      <description>如何在 Linux 上创建一个 ISCSI 服务器？如何用不同的存储介质作为后端存储？
因为一次黑群晖系统挂了，所以就学习了这个技能来解决这个问题。后来也就抛弃黑群晖了，黑群晖是真的香，但是有时候不怎么稳定，而且不像 Ubuntu 那样可以自由的安装各种软件。
安装方法&amp;amp;系统环境 Debian 及其衍生出来的系统，如 Ubuntu，Deepin 等，我是用 Ubuntu 18.04 LTS。
安装 targetcli-fb sudo apt update sudo apt install targetcli-fb 标题 命令有两种模式，一种是交互式模式，一种是命令行模式。这里用的是交互模式。
输入 targetcli 就可以进入命令行模式了。
进入交互式模式可以使用 ls,pwd,cd 等命令。
按 2 次 TAB 键可以查看所有可用的命令，在每个目录下都可以通过这种方式查看可用的命令
block 块设备 fileio 文件 pscsi 物理 SCSI ramdisk 内存 创建后端存储的文件 这里我们用一个文件做后端存储就行了，因为在写 blog 之前数据已经提取出来了这里演示就创建一个空白文件。
创建一个 1G 的文件
dd if=/dev/zero of=test bs=1M count=1000 创建后端存储 进入 targetcli 控制台输入
cd backstores/fileio # 这里按TAB会有提示不必一个个字母输入 create lun0 /root/test # 创建一个名为 lun0 的后端存储 回到根目录输入</description>
    </item>
    
  </channel>
</rss>
